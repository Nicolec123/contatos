<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="./styles.css">
    <title>Tela de Contatos</title>
</head>
<body>
    <div class="container">
        <h1>Contatos</h1>
        <form id="contact-form" method="POST">
            <label for="nome">Nome:</label>
            <input type="text" id="nome" name="nome" required><br><br>

            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required><br><br>

            <label for="mensagem">Mensagem:</label>
            <textarea id="mensagem" name="mensagem" required></textarea><br><br>

            <button type="submit" class="btn-mensagem">Enviar</button>
        </form>
    </div>

    <script>
    document.querySelector('#contact-form').addEventListener('submit', async function (event) {
        event.preventDefault();
//captura os campos do html
        const nome = document.querySelector('#nome').value.trim();
        const email = document.querySelector('#email').value.trim();
        const mensagem = document.querySelector('#mensagem').value.trim();

        // Verifica se os campos estão preenchidos
        if (!nome || !email || !mensagem) {
            alert('Por favor, preencha todos os campos.');
            return;
        }
// muda o corpo de resposta da api só olhar no swagger a resposta padrao que esta lá
        const data = {
            from: {
                email: "noreply@beneficiocerto.com.br",
                name: "No Reply"
            },
            subject: "Resposta automatica BC",
            body: {
                content: mensagem,
                is_html: false
            },
            recipients: [
                {
                    email: email,
                    name: nome
                }
            ]
        };

        const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY3ZWI5MmJjLTljYzktNDk2MS04OGFkLTFiODA5NjliNDM3MCIsInVzZXJuYW1lIjoiY29udGF0b19zZW5kZXIiLCJuYW1lIjoiQ29udGF0byBTZW5kZXIiLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTczNzA0MDA0OSwiZXhwIjoxNzM3MTI2NDQ5LCJzdWIiOiJmN2ViOTJiYy05Y2M5LTQ5NjEtODhhZC0xYjgwOTY5YjQzNzAifQ.zbJIXjjdLyPemq-kJRjdUB0li1WfdrHU5Q2_VeWZHow'; // token obtido no imsominia

      try {
    const response = await fetch('https://notifications-api.mobileng.com.br/mail/send_email', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}` // Adiciona o token de autenticação
        },
        body: JSON.stringify(data) // Transforma(CONVERTE EM JSON) o objeto `data` em uma string JSON para envio
    });

    if (!response.ok) {
        let errorMsg = 'Erro ao enviar o e-mail.';

        switch (response.status) {
            case 400:
                errorMsg = 'Requisição inválida. Verifique os dados enviados.';
                break;
            case 404:
                errorMsg = 'Endpoint não encontrado. Verifique a URL da API.';
                break;
            case 500:
                errorMsg = 'Erro interno do servidor. Tente novamente mais tarde.';
                break;
            default:
                errorMsg = `Erro desconhecido. Código de status: ${response.status}`;
        }

        throw new Error(errorMsg);
    }

    // Tratamento para verificar e exibir respostas da API
    const responseText = await response.text();

    if (responseText.trim()) { // Verifica se a resposta não está vazia
        try {
            const responseData = JSON.parse(responseText);//converter o texto em JSON 
            alert(responseData.message || 'E-mail enviado com sucesso!');
        } catch (error) {
            console.warn('Resposta não é JSON, mas o e-mail foi enviado com sucesso.');
            alert('E-mail enviado com sucesso!');
        }
    } else {
        alert('E-mail enviado com sucesso!');
    }

    // Limpa o formulário após sucesso
    document.querySelector('#contact-form').reset();

    // Quando o formulário da errado internamente : problemas de conexao com a api e etc....
} catch (error) {
    if (error.message === 'Failed to fetch') {
        alert('Erro de conexão. Verifique sua internet ou a disponibilidade da API.');
    } else {
        alert(`Erro: ${error.message}`);
    }
    console.error('Erro ao enviar o e-mail:', error.message);
}

    });
</script>

</body>
</html>
